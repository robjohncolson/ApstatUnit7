{
  "description": "An HTML page designed as a learning tool for AP Statistics Unit 6 (Inference for Categorical Data: Proportions). It features interactive tabs for different learning aids, including a step-by-step learning flow, a process flowchart, a prompt generator for an AI tutor (Grok), and study materials with progress tracking.",
  "technologies": [
    "HTML5",
    "Tailwind CSS",
    "JavaScript (ES6+)",
    "React (via CDN)",
    "ReactDOM (via CDN)",
    "Babel (for JSX)",
    "Mermaid JS (for flowchart)"
  ],
  "structure": {
    "head": {
      "title": "AP Statistics Unit 6: Inference for Categorical Data: Proportions",
      "meta": ["charset", "viewport"],
      "scripts": [
        "Tailwind CSS (CDN)",
        "React (CDN)",
        "ReactDOM (CDN)",
        "Babel Standalone (CDN)",
        "Mermaid JS (CDN)"
      ],
      "styles": [
        "Inline CSS for tab display logic (.tab-content, .active)",
        "Inline CSS for tab button styling (.tab-button, .active)"
      ]
    },
    "body": {
      "container": "div.container.mx-auto",
      "header": {
        "elementType": "header.text-center",
        "content": [
          "h1: Page Title",
          "p: Subtitle",
          "div: Exam Weight Information"
        ]
      },
      "tabNavigation": {
        "elementType": "div.flex.mb-0.border-b",
        "tabs": [
          { "id": "tab-learning-flow", "text": "Learning Flow", "defaultActive": true },
          { "id": "tab-flowchart", "text": "Flowchart" },
          { "id": "tab-grok-prompt", "text": "Grok Prompt" },
          { "id": "tab-study-materials", "text": "Study Materials" }
        ]
      },
      "tabContentContainer": {
        "elementType": "div.bg-white.rounded-b-lg.shadow-md.p-6",
        "contentPanes": [
          {
            "id": "content-learning-flow",
            "tabId": "tab-learning-flow",
            "description": "Displays an interactive step-by-step guide for a learning session.",
            "rootElementId": "learning-flow-app",
            "framework": "React"
          },
          {
            "id": "content-flowchart",
            "tabId": "tab-flowchart",
            "description": "Displays a flowchart visualizing the recommended learning process using Mermaid JS.",
            "elements": [
              "h2: Title",
              "p: Description",
              "div.mermaid#flowchart: Container for the Mermaid diagram",
              "div: Color key legend for flowchart nodes"
            ]
          },
          {
            "id": "content-grok-prompt",
            "tabId": "tab-grok-prompt",
            "description": "Provides a pre-written prompt for the Grok AI assistant, instructions for use, download links for the current topic's materials, and quick access to all topics.",
            "layout": "Two-column grid (md)",
            "leftColumn": {
              "elements": [
                "h3: 'Get the Prompt'",
                "pre#grok-prompt: Displays the AI prompt text",
                "button#copy-button: Copies the prompt to clipboard",
                "a: Link to open Grok",
                "h3: 'Video Learning Guide'",
                "ol: Step-by-step instructions for using Grok with PDFs",
                "div: Link to video tutorial"
              ]
            },
            "rightColumn": {
              "elements": [
                "div#current-topic-info: Dynamically updated section showing current topic details (name, description, PDF/video links)",
                "button#complete-current-topic-btn: Marks the current topic as completed or resets progress if all done.",
                "div#quick-access-topics: Dynamically populated grid of buttons/cards for quick access to all topics."
              ]
            }
          },
          {
            "id": "content-study-materials",
            "tabId": "tab-study-materials",
            "description": "Lists all study topics for Unit 6 with links to relevant videos (AP Classroom & Google Drive backups) and downloadable PDF materials (questions/answers). Includes progress tracking.",
            "elements": [
              "h2: Title",
              "p: Instructions",
              "div#all-completed-container: Message shown when all topics are completed (initially hidden).",
              "button#reset-progress-btn: Button to reset all topic progress.",
              "div: Banner promoting the 'Grok Prompt' tab.",
              "select#topic-select: Dropdown to select and jump to a topic.",
              "div#progress-container": "Container for progress bar.",
              "div#progress-bar: Visual progress bar.",
              "div#topic-cards-container: Dynamically populated grid of topic cards.",
              "div#next-topic-container: Section highlighting the next suggested topic (initially hidden)."
            ]
          }
        ]
      },
      "scripts": [
        {
          "type": "text/javascript",
          "description": "Main JavaScript logic for interactivity.",
          "keyVariables": [
            "`flowchartDefinition`: String containing Mermaid syntax for the flowchart.",
            "`grokPrompt`: String containing the prompt for the Grok AI.",
            "`pdfFiles`: Array of objects, each representing a study topic with its details (ID, name, description, PDF paths, video URLs, completion status, capstone flag)."
          ],
          "keyFunctions": [
            "`renderFlowchart()`: Renders the Mermaid diagram.",
            "`createTopicCard()`: Generates HTML for a single topic card.",
            "`checkAllTopicsCompleted()`: Checks completion status of all topics.",
            "`resetProgress()`: Resets completion status for all topics.",
            "`populateTopicCards()`: Renders all topic cards in the Study Materials tab.",
            "`populateTopicSelect()`: Populates the topic dropdown.",
            "`markTopicAsCompleted()`: Updates a topic's status to completed.",
            "`updateNextTopic()`: Updates the 'Next Topic' section.",
            "`updateProgressBar()`: Updates the visual progress bar.",
            "`saveTopicProgress()` / `loadTopicProgress()`: Manage progress persistence using localStorage.",
            "`updateCurrentTopicInfo()`: Updates the 'Current Topic' section in the Grok Prompt tab.",
            "`populateQuickAccessTopics()`: Populates the quick topic links in the Grok Prompt tab.",
            "`setTopicAsCurrent()`: Sets a specific topic as the current focus.",
            "Tab switching logic (event listeners on tab buttons).",
            "Clipboard copy logic for Grok prompt.",
            "Initialization logic (`DOMContentLoaded`)."
          ]
        },
        {
          "type": "text/babel",
          "description": "React component script for the 'Learning Flow' tab.",
          "component": "`APStatLearningFlow`",
          "renderedInto": "#learning-flow-app",
          "functionality": "Displays a multi-step interactive guide using React state (`currentStep`) and a predefined `steps` array containing content for each step. Includes navigation buttons."
        }
      ]
    }
  },
  "styling": {
    "framework": "Tailwind CSS (via CDN)",
    "custom": "Inline CSS primarily for tab active/inactive states and basic layout."
  },
  "dynamicBehavior": {
    "tabSwitching": "JavaScript manipulates 'active' classes on tab buttons and content panes to show/hide content.",
    "mermaidFlowchart": "Initialized and rendered by Mermaid JS library using the `flowchartDefinition` string when the 'Flowchart' tab is active.",
    "grokPromptInteraction": {
      "promptDisplay": "Static text loaded into `#grok-prompt`.",
      "copyButton": "JavaScript copies text from `#grok-prompt` to clipboard.",
      "currentTopic": "Dynamically updated based on user progress (`updateCurrentTopicInfo()`).",
      "quickAccess": "Dynamically generated links/buttons (`populateQuickAccessTopics()`)."
    },
    "topicManagement": {
      "dataSource": "`pdfFiles` JavaScript array.",
      "state": "Each topic object in `pdfFiles` has `completed` (boolean) and `current` (boolean) flags.",
      "persistence": "Topic completion and current status saved to/loaded from `localStorage` via `saveTopicProgress`/`loadTopicProgress`.",
      "uiUpdates": [
        "Study Materials Tab: Cards generated by `populateTopicCards()`, progress bar by `updateProgressBar()`, dropdown by `populateTopicSelect()`, 'Next Topic' by `updateNextTopic()`.",
        "Grok Prompt Tab: Current topic details by `updateCurrentTopicInfo()`, quick access links by `populateQuickAccessTopics()`."
      ],
      "userActions": [
        "`markTopicAsCompleted(topicId)`: Updates state, saves, refreshes UI.",
        "`resetProgress()`: Resets state for all topics, saves, refreshes UI.",
        "Clicking quick access topic: Sets topic as `current`, saves, refreshes UI."
      ]
    },
    "reactComponent_LearningFlow": {
      "rendering": "ReactDOM renders the `APStatLearningFlow` component into `#learning-flow-app`.",
      "interactivity": "React state (`currentStep`) manages which step is displayed. Buttons trigger state updates (`handlePrev`, `handleNext`)."
    },
    "backupVideoLinks": "Tooltips (via `title` attribute or JS-driven hover effects on (+) icons) reveal Google Drive backup links for videos if AP Classroom is down. Links are stored in `altVideoUrl`, `altVideoUrl2`, `altVideoUrl3` properties within the `pdfFiles` array."
  },
  "keyDataStructures": {
    "pdfFiles": "Array of objects. Each object represents a topic and contains: `id`, `name`, `description`, `questionPdf` (path), `answersPdf` (path), `videoUrl` (primary link), `altVideoUrl` (backup link), potentially more video/PDF links (`videoUrl2`, `questionPdf2`, etc.), `completed` (boolean), `current` (boolean), `isCapstone` (boolean). This array drives the content of the 'Study Materials' and 'Grok Prompt' tabs.",
    "flowchartDefinition": "String containing Mermaid syntax defining the flowchart diagram.",
    "grokPrompt": "String containing the detailed prompt text intended for the Grok AI.",
    "steps (React)": "Array of objects within the React component. Each object defines a step in the learning flow: `title`, `icon`, `content`, `tips`, `color`."
  }
}